{"ast":null,"code":"import _regeneratorRuntime from\"E:/railway/expressjs-mongoose/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/railway/expressjs-mongoose/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"E:/railway/expressjs-mongoose/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"E:/railway/expressjs-mongoose/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"E:/railway/expressjs-mongoose/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"E:/railway/expressjs-mongoose/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"E:/railway/expressjs-mongoose/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import Axios from'axios';import React,{Component}from'react';import axios from'axios';// import 'bootstrap/dist/css/bootstrap.min.css';  \nimport{Container,Card,Col,Button}from'react-bootstrap';var Addition=/*#__PURE__*/function(_Component){_inherits(Addition,_Component);var _super=_createSuper(Addition);function Addition(props){var _this;_classCallCheck(this,Addition);_this=_super.call(this,props);_this.myChangeHandler=function(event){debugger;var nam=event.target.name;var val=event.target.value;_this.setState(_defineProperty({},nam,val));//nam becomes a computed property.\n// so it will not set \"nam\" instead will see the value of nam then set stuff,\n};_this.mySubmitHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var url;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();// prevent default behaviour\n//Constructing URL to send to the server.\nurl=\"http://localhost:5000/add/\".concat(_this.state.firstNumber,\"/and/\").concat(_this.state.secondNumber);//Using fetch to send a GET request to the server.\n// const data =  await axios.get(url);\n// console.log(data);\n_context.next=4;return fetch(url).then(function(result){return result.json();}).then(function(result){//After the request finished, update the state.\n//NOTE: You do not care where or how to display the result.\n// As HOW to display is the job of the view.\n// You just update the state and let React take it on from there.\ndebugger;_this.setState({queryResult:result.Addition});});case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={firstNumber:null,secondNumber:null};return _this;}//Function to be called when user makes a change\n_createClass(Addition,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.mySubmitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"firstNumber\",children:\"Enter First Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"firstNumber\",id:\"firstNumber\",className:\"form-control\",onChange:this.myChangeHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"secondNumber\",children:\"Enter Second Number\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"secondNumber\",id:\"secondNumber\",className:\"form-control\",onChange:this.myChangeHandler})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Submit\"})})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Your Addition Result (from server) is: \",this.state.queryResult,\" \"]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Your Addition Result (from ReactJS) is: \",Number(this.state.firstNumber)+Number(this.state.secondNumber),\" \"]})})})]});}}]);return Addition;}(Component);export{Addition as default};","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/src/components/Addition.js"],"names":["Axios","React","Component","axios","Container","Card","Col","Button","Addition","props","myChangeHandler","event","nam","target","name","val","value","setState","mySubmitHandler","preventDefault","url","state","firstNumber","secondNumber","fetch","then","result","json","queryResult","Number"],"mappings":"s5BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,OAAQC,SAAR,CAAmBC,IAAnB,CAAyBC,GAAzB,CAA8BC,MAA9B,KAA2C,iBAA3C,C,GAEqBC,CAAAA,Q,oGACjB,kBAAYC,KAAZ,CAAmB,0CACf,uBAAMA,KAAN,EADe,MAQnBC,eARmB,CAQD,SAACC,KAAD,CAAW,CACzB,SACA,GAAIC,CAAAA,GAAG,CAAGD,KAAK,CAACE,MAAN,CAAaC,IAAvB,CACA,GAAIC,CAAAA,GAAG,CAAGJ,KAAK,CAACE,MAAN,CAAaG,KAAvB,CACA,MAAKC,QAAL,oBAAiBL,GAAjB,CAAuBG,GAAvB,GAA+B;AAC/B;AACH,CAdkB,OAgBnBG,eAhBmB,0FAgBD,iBAAOP,KAAP,0HAEdA,KAAK,CAACQ,cAAN,GAAwB;AACxB;AACMC,GAJQ,qCAI2B,MAAKC,KAAL,CAAWC,WAJtC,iBAIyD,MAAKD,KAAL,CAAWE,YAJpE,EAMd;AAEA;AAEA;AAVc,sBAYLC,CAAAA,KAAK,CAACJ,GAAD,CAAL,CACJK,IADI,CACC,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACC,IAAP,EAAZ,EADD,EAEJF,IAFI,CAEC,SAAAC,MAAM,CAAI,CACZ;AACA;AACA;AACA;AACA,SACA,MAAKT,QAAL,CAAc,CAAEW,WAAW,CAAEF,MAAM,CAAClB,QAAtB,CAAd,EACH,CATI,CAZK,uDAhBC,+DAEf,MAAKa,KAAL,CAAa,CACTC,WAAW,CAAE,IADJ,CAETC,YAAY,CAAE,IAFL,CAAb,CAFe,aAMlB,CACD;4DAiCS,CACL,mBACI,oCACI,YAAK,SAAS,CAAC,KAAf,uBACI,YAAK,SAAS,CAAC,KAAf,uBACA,cAAM,QAAQ,CAAE,KAAKL,eAArB,wBAEI,oCACA,aAAK,SAAS,CAAC,YAAf,wBACI,cAAO,OAAO,CAAC,aAAf,gCADJ,cAEI,cACI,IAAI,CAAC,QADT,CAEI,IAAI,CAAC,aAFT,CAGI,EAAE,CAAC,aAHP,CAII,SAAS,CAAC,cAJd,CAKI,QAAQ,CAAE,KAAKR,eALnB,EAFJ,GADA,cAUA,aAAK,SAAS,CAAC,YAAf,wBACI,cAAO,OAAO,CAAC,cAAf,iCADJ,cAEI,cACI,IAAI,CAAC,QADT,CAEI,IAAI,CAAC,cAFT,CAGI,EAAE,CAAC,cAHP,CAII,SAAS,CAAC,cAJd,CAKI,QAAQ,CAAE,KAAKA,eALnB,EAFJ,GAVA,GAFJ,cAyBI,YAAK,SAAS,CAAC,WAAf,uBAEI,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,iBAAhC,oBAFJ,EAzBJ,GADA,EADJ,EADJ,cAqCI,YAAK,SAAS,CAAC,KAAf,uBACI,YAAK,SAAS,CAAC,KAAf,uBAAqB,gEAA4C,KAAKW,KAAL,CAAWO,WAAvD,OAArB,EADJ,EArCJ,cAyCI,YAAK,SAAS,CAAC,KAAf,uBACI,YAAK,SAAS,CAAC,KAAf,uBAEI,iEAA6CC,MAAM,CAAC,KAAKR,KAAL,CAAWC,WAAZ,CAAN,CAAiCO,MAAM,CAAC,KAAKR,KAAL,CAAWE,YAAZ,CAApF,OAFJ,EADJ,EAzCJ,GADJ,CAkDH,C,sBA5FiCrB,S,SAAjBM,Q","sourcesContent":["import Axios from 'axios';\nimport React, { Component } from 'react'\nimport axios from 'axios';\n// import 'bootstrap/dist/css/bootstrap.min.css';  \nimport {Container ,Card, Col, Button} from 'react-bootstrap';  \n\nexport default class Addition extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstNumber: null,\n            secondNumber: null\n        };\n    }\n    //Function to be called when user makes a change\n    myChangeHandler = (event) => {\n        debugger;\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({ [nam]: val }); //nam becomes a computed property.\n        // so it will not set \"nam\" instead will see the value of nam then set stuff,\n    }\n    // To be called after user clicks on submit.\n    mySubmitHandler = async (event) => {\n\n        event.preventDefault(); // prevent default behaviour\n        //Constructing URL to send to the server.\n        const url = `http://localhost:5000/add/${this.state.firstNumber}/and/${this.state.secondNumber}`\n\n        //Using fetch to send a GET request to the server.\n\n        // const data =  await axios.get(url);\n\n        // console.log(data);\n        \n           await fetch(url)\n            .then((result) => result.json())\n            .then(result => {\n                //After the request finished, update the state.\n                //NOTE: You do not care where or how to display the result.\n                // As HOW to display is the job of the view.\n                // You just update the state and let React take it on from there.\n                debugger;\n                this.setState({ queryResult: result.Addition })\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                    <form onSubmit={this.mySubmitHandler}>\n\n                        <div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"firstNumber\">Enter First Number</label>\n                            <input\n                                type=\"number\"\n                                name=\"firstNumber\"\n                                id=\"firstNumber\"\n                                className=\"form-control\"\n                                onChange={this.myChangeHandler} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"secondNumber\">Enter Second Number</label>\n                            <input\n                                type=\"number\"\n                                name=\"secondNumber\"\n                                id=\"secondNumber\"\n                                className=\"form-control\"\n                                onChange={this.myChangeHandler} />\n                        </div>\n\n                        </div>\n\n\n                        <div className=\"mt-4 mb-4\">\n                      \n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n\n                        </div>\n                    </form>\n                </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\"><h3>Your Addition Result (from server) is: {this.state.queryResult} </h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        {/*Not the best way to do it, but works for small compute operations*/}\n                        <h3>Your Addition Result (from ReactJS) is: {Number(this.state.firstNumber) + Number(this.state.secondNumber)} </h3>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}