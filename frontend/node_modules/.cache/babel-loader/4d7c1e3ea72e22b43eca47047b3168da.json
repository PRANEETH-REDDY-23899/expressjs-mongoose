{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useStyleRegister } from '@ant-design/cssinjs';\nimport { useContext } from 'react';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { ConfigContext } from '../../config-provider/context';\nimport { mergeToken, statisticToken, useToken } from '../index';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken) {\n  return function (prefixCls) {\n    var _useToken = useToken(),\n        _useToken2 = _slicedToArray(_useToken, 3),\n        theme = _useToken2[0],\n        token = _useToken2[1],\n        hashId = _useToken2[2];\n\n    var _useContext = useContext(ConfigContext),\n        getPrefixCls = _useContext.getPrefixCls,\n        iconPrefixCls = _useContext.iconPrefixCls;\n\n    var rootPrefixCls = getPrefixCls(); // Generate style for all a tags in antd component.\n\n    useStyleRegister({\n      theme: theme,\n      token: token,\n      hashId: hashId,\n      path: ['Shared', rootPrefixCls]\n    }, function () {\n      return [{\n        // Link\n        '&': genLinkStyle(token)\n      }];\n    });\n    return [useStyleRegister({\n      theme: theme,\n      token: token,\n      hashId: hashId,\n      path: [component, prefixCls, iconPrefixCls]\n    }, function () {\n      var _statisticToken = statisticToken(token),\n          proxyToken = _statisticToken.token,\n          flush = _statisticToken.flush;\n\n      var defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(proxyToken) : getDefaultToken;\n\n      var mergedComponentToken = _extends(_extends({}, defaultComponentToken), token[component]);\n\n      var componentCls = \".\" + prefixCls;\n      var mergedToken = mergeToken(proxyToken, {\n        componentCls: componentCls,\n        prefixCls: prefixCls,\n        iconCls: \".\" + iconPrefixCls,\n        antCls: \".\" + rootPrefixCls\n      }, mergedComponentToken);\n      var styleInterpolation = styleFn(mergedToken, {\n        hashId: hashId,\n        prefixCls: prefixCls,\n        rootPrefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        overrideComponentToken: token[component]\n      });\n      flush(component, mergedComponentToken);\n      return [genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/antd/es/theme/util/genComponentStyleHook.js"],"names":["_extends","_slicedToArray","useStyleRegister","useContext","genCommonStyle","genLinkStyle","ConfigContext","mergeToken","statisticToken","useToken","genComponentStyleHook","component","styleFn","getDefaultToken","prefixCls","_useToken","_useToken2","theme","token","hashId","_useContext","getPrefixCls","iconPrefixCls","rootPrefixCls","path","_statisticToken","proxyToken","flush","defaultComponentToken","mergedComponentToken","componentCls","mergedToken","iconCls","antCls","styleInterpolation","overrideComponentToken"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useStyleRegister } from '@ant-design/cssinjs';\nimport { useContext } from 'react';\nimport { genCommonStyle, genLinkStyle } from '../../style';\nimport { ConfigContext } from '../../config-provider/context';\nimport { mergeToken, statisticToken, useToken } from '../index';\nexport default function genComponentStyleHook(component, styleFn, getDefaultToken) {\n  return function (prefixCls) {\n    var _useToken = useToken(),\n      _useToken2 = _slicedToArray(_useToken, 3),\n      theme = _useToken2[0],\n      token = _useToken2[1],\n      hashId = _useToken2[2];\n    var _useContext = useContext(ConfigContext),\n      getPrefixCls = _useContext.getPrefixCls,\n      iconPrefixCls = _useContext.iconPrefixCls;\n    var rootPrefixCls = getPrefixCls();\n    // Generate style for all a tags in antd component.\n    useStyleRegister({\n      theme: theme,\n      token: token,\n      hashId: hashId,\n      path: ['Shared', rootPrefixCls]\n    }, function () {\n      return [{\n        // Link\n        '&': genLinkStyle(token)\n      }];\n    });\n    return [useStyleRegister({\n      theme: theme,\n      token: token,\n      hashId: hashId,\n      path: [component, prefixCls, iconPrefixCls]\n    }, function () {\n      var _statisticToken = statisticToken(token),\n        proxyToken = _statisticToken.token,\n        flush = _statisticToken.flush;\n      var defaultComponentToken = typeof getDefaultToken === 'function' ? getDefaultToken(proxyToken) : getDefaultToken;\n      var mergedComponentToken = _extends(_extends({}, defaultComponentToken), token[component]);\n      var componentCls = \".\" + prefixCls;\n      var mergedToken = mergeToken(proxyToken, {\n        componentCls: componentCls,\n        prefixCls: prefixCls,\n        iconCls: \".\" + iconPrefixCls,\n        antCls: \".\" + rootPrefixCls\n      }, mergedComponentToken);\n      var styleInterpolation = styleFn(mergedToken, {\n        hashId: hashId,\n        prefixCls: prefixCls,\n        rootPrefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        overrideComponentToken: token[component]\n      });\n      flush(component, mergedComponentToken);\n      return [genCommonStyle(token, prefixCls), styleInterpolation];\n    }), hashId];\n  };\n}"]},"metadata":{},"sourceType":"module"}