{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"getContainer\", \"motion\", \"prefixCls\", \"maxCount\", \"className\", \"style\", \"onAllRemoved\"];\nimport * as React from 'react';\nimport Notifications from './Notifications';\n\nvar defaultGetContainer = function defaultGetContainer() {\n  return document.body;\n};\n\nvar uniqueKey = 0;\n\nfunction mergeConfig() {\n  var clone = {};\n\n  for (var _len = arguments.length, objList = new Array(_len), _key = 0; _key < _len; _key++) {\n    objList[_key] = arguments[_key];\n  }\n\n  objList.forEach(function (obj) {\n    if (obj) {\n      Object.keys(obj).forEach(function (key) {\n        var val = obj[key];\n\n        if (val !== undefined) {\n          clone[key] = val;\n        }\n      });\n    }\n  });\n  return clone;\n}\n\nexport default function useNotification() {\n  var rootConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _rootConfig$getContai = rootConfig.getContainer,\n      getContainer = _rootConfig$getContai === void 0 ? defaultGetContainer : _rootConfig$getContai,\n      motion = rootConfig.motion,\n      prefixCls = rootConfig.prefixCls,\n      maxCount = rootConfig.maxCount,\n      className = rootConfig.className,\n      style = rootConfig.style,\n      onAllRemoved = rootConfig.onAllRemoved,\n      shareConfig = _objectWithoutProperties(rootConfig, _excluded);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      container = _React$useState2[0],\n      setContainer = _React$useState2[1];\n\n  var notificationsRef = React.useRef();\n  var contextHolder = /*#__PURE__*/React.createElement(Notifications, {\n    container: container,\n    ref: notificationsRef,\n    prefixCls: prefixCls,\n    motion: motion,\n    maxCount: maxCount,\n    className: className,\n    style: style,\n    onAllRemoved: onAllRemoved\n  });\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      taskQueue = _React$useState4[0],\n      setTaskQueue = _React$useState4[1]; // ========================= Refs =========================\n\n\n  var api = React.useMemo(function () {\n    return {\n      open: function open(config) {\n        var mergedConfig = mergeConfig(shareConfig, config);\n\n        if (mergedConfig.key === null || mergedConfig.key === undefined) {\n          mergedConfig.key = \"rc-notification-\".concat(uniqueKey);\n          uniqueKey += 1;\n        }\n\n        setTaskQueue(function (queue) {\n          return [].concat(_toConsumableArray(queue), [{\n            type: 'open',\n            config: mergedConfig\n          }]);\n        });\n      },\n      close: function close(key) {\n        setTaskQueue(function (queue) {\n          return [].concat(_toConsumableArray(queue), [{\n            type: 'close',\n            key: key\n          }]);\n        });\n      },\n      destroy: function destroy() {\n        setTaskQueue(function (queue) {\n          return [].concat(_toConsumableArray(queue), [{\n            type: 'destroy'\n          }]);\n        });\n      }\n    };\n  }, []); // ======================= Container ======================\n  // React 18 should all in effect that we will check container in each render\n  // Which means getContainer should be stable.\n\n  React.useEffect(function () {\n    setContainer(getContainer());\n  }); // ======================== Effect ========================\n\n  React.useEffect(function () {\n    // Flush task when node ready\n    if (notificationsRef.current && taskQueue.length) {\n      taskQueue.forEach(function (task) {\n        switch (task.type) {\n          case 'open':\n            notificationsRef.current.open(task.config);\n            break;\n\n          case 'close':\n            notificationsRef.current.close(task.key);\n            break;\n\n          case 'destroy':\n            notificationsRef.current.destroy();\n            break;\n        }\n      });\n      setTaskQueue([]);\n    }\n  }, [taskQueue]); // ======================== Return ========================\n\n  return [api, contextHolder];\n}","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/rc-notification/es/useNotification.js"],"names":["_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","React","Notifications","defaultGetContainer","document","body","uniqueKey","mergeConfig","clone","_len","arguments","length","objList","Array","_key","forEach","obj","Object","keys","key","val","undefined","useNotification","rootConfig","_rootConfig$getContai","getContainer","motion","prefixCls","maxCount","className","style","onAllRemoved","shareConfig","_React$useState","useState","_React$useState2","container","setContainer","notificationsRef","useRef","contextHolder","createElement","ref","_React$useState3","_React$useState4","taskQueue","setTaskQueue","api","useMemo","open","config","mergedConfig","concat","queue","type","close","destroy","useEffect","current","task"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"getContainer\", \"motion\", \"prefixCls\", \"maxCount\", \"className\", \"style\", \"onAllRemoved\"];\nimport * as React from 'react';\nimport Notifications from './Notifications';\n\nvar defaultGetContainer = function defaultGetContainer() {\n  return document.body;\n};\n\nvar uniqueKey = 0;\n\nfunction mergeConfig() {\n  var clone = {};\n\n  for (var _len = arguments.length, objList = new Array(_len), _key = 0; _key < _len; _key++) {\n    objList[_key] = arguments[_key];\n  }\n\n  objList.forEach(function (obj) {\n    if (obj) {\n      Object.keys(obj).forEach(function (key) {\n        var val = obj[key];\n\n        if (val !== undefined) {\n          clone[key] = val;\n        }\n      });\n    }\n  });\n  return clone;\n}\n\nexport default function useNotification() {\n  var rootConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _rootConfig$getContai = rootConfig.getContainer,\n      getContainer = _rootConfig$getContai === void 0 ? defaultGetContainer : _rootConfig$getContai,\n      motion = rootConfig.motion,\n      prefixCls = rootConfig.prefixCls,\n      maxCount = rootConfig.maxCount,\n      className = rootConfig.className,\n      style = rootConfig.style,\n      onAllRemoved = rootConfig.onAllRemoved,\n      shareConfig = _objectWithoutProperties(rootConfig, _excluded);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      container = _React$useState2[0],\n      setContainer = _React$useState2[1];\n\n  var notificationsRef = React.useRef();\n  var contextHolder = /*#__PURE__*/React.createElement(Notifications, {\n    container: container,\n    ref: notificationsRef,\n    prefixCls: prefixCls,\n    motion: motion,\n    maxCount: maxCount,\n    className: className,\n    style: style,\n    onAllRemoved: onAllRemoved\n  });\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      taskQueue = _React$useState4[0],\n      setTaskQueue = _React$useState4[1]; // ========================= Refs =========================\n\n\n  var api = React.useMemo(function () {\n    return {\n      open: function open(config) {\n        var mergedConfig = mergeConfig(shareConfig, config);\n\n        if (mergedConfig.key === null || mergedConfig.key === undefined) {\n          mergedConfig.key = \"rc-notification-\".concat(uniqueKey);\n          uniqueKey += 1;\n        }\n\n        setTaskQueue(function (queue) {\n          return [].concat(_toConsumableArray(queue), [{\n            type: 'open',\n            config: mergedConfig\n          }]);\n        });\n      },\n      close: function close(key) {\n        setTaskQueue(function (queue) {\n          return [].concat(_toConsumableArray(queue), [{\n            type: 'close',\n            key: key\n          }]);\n        });\n      },\n      destroy: function destroy() {\n        setTaskQueue(function (queue) {\n          return [].concat(_toConsumableArray(queue), [{\n            type: 'destroy'\n          }]);\n        });\n      }\n    };\n  }, []); // ======================= Container ======================\n  // React 18 should all in effect that we will check container in each render\n  // Which means getContainer should be stable.\n\n  React.useEffect(function () {\n    setContainer(getContainer());\n  }); // ======================== Effect ========================\n\n  React.useEffect(function () {\n    // Flush task when node ready\n    if (notificationsRef.current && taskQueue.length) {\n      taskQueue.forEach(function (task) {\n        switch (task.type) {\n          case 'open':\n            notificationsRef.current.open(task.config);\n            break;\n\n          case 'close':\n            notificationsRef.current.close(task.key);\n            break;\n\n          case 'destroy':\n            notificationsRef.current.destroy();\n            break;\n        }\n      });\n      setTaskQueue([]);\n    }\n  }, [taskQueue]); // ======================== Return ========================\n\n  return [api, contextHolder];\n}"]},"metadata":{},"sourceType":"module"}