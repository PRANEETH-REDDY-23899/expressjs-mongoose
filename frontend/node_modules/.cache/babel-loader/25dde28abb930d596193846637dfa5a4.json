{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\n\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\n\nfunction getAlphaColor(frontColor, backgroundColor) {\n  var _TinyColor$toRgb = new TinyColor(frontColor).toRgb(),\n      fR = _TinyColor$toRgb.r,\n      fG = _TinyColor$toRgb.g,\n      fB = _TinyColor$toRgb.b,\n      originAlpha = _TinyColor$toRgb.a;\n\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n\n  var _TinyColor$toRgb2 = new TinyColor(backgroundColor).toRgb(),\n      bR = _TinyColor$toRgb2.r,\n      bG = _TinyColor$toRgb2.g,\n      bB = _TinyColor$toRgb2.b;\n\n  for (var fA = 0.01; fA <= 1; fA += 0.01) {\n    var r = Math.round((fR - bR * (1 - fA)) / fA);\n    var g = Math.round((fG - bG * (1 - fA)) / fA);\n    var b = Math.round((fB - bB * (1 - fA)) / fA);\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) return new TinyColor({\n      r: r,\n      g: g,\n      b: b,\n      a: Math.round(fA * 100) / 100\n    }).toRgbString();\n  } // fallback\n\n  /* istanbul ignore next */\n\n\n  return new TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\n\nexport default getAlphaColor;","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/antd/es/theme/util/getAlphaColor.js"],"names":["TinyColor","isStableColor","color","getAlphaColor","frontColor","backgroundColor","_TinyColor$toRgb","toRgb","fR","r","fG","g","fB","b","originAlpha","a","_TinyColor$toRgb2","bR","bG","bB","fA","Math","round","toRgbString"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,GAA9B;AACD;;AACD,SAASC,aAAT,CAAuBC,UAAvB,EAAmCC,eAAnC,EAAoD;AAClD,MAAIC,gBAAgB,GAAG,IAAIN,SAAJ,CAAcI,UAAd,EAA0BG,KAA1B,EAAvB;AAAA,MACEC,EAAE,GAAGF,gBAAgB,CAACG,CADxB;AAAA,MAEEC,EAAE,GAAGJ,gBAAgB,CAACK,CAFxB;AAAA,MAGEC,EAAE,GAAGN,gBAAgB,CAACO,CAHxB;AAAA,MAIEC,WAAW,GAAGR,gBAAgB,CAACS,CAJjC;;AAKA,MAAID,WAAW,GAAG,CAAlB,EAAqB;AACnB,WAAOV,UAAP;AACD;;AACD,MAAIY,iBAAiB,GAAG,IAAIhB,SAAJ,CAAcK,eAAd,EAA+BE,KAA/B,EAAxB;AAAA,MACEU,EAAE,GAAGD,iBAAiB,CAACP,CADzB;AAAA,MAEES,EAAE,GAAGF,iBAAiB,CAACL,CAFzB;AAAA,MAGEQ,EAAE,GAAGH,iBAAiB,CAACH,CAHzB;;AAIA,OAAK,IAAIO,EAAE,GAAG,IAAd,EAAoBA,EAAE,IAAI,CAA1B,EAA6BA,EAAE,IAAI,IAAnC,EAAyC;AACvC,QAAIX,CAAC,GAAGY,IAAI,CAACC,KAAL,CAAW,CAACd,EAAE,GAAGS,EAAE,IAAI,IAAIG,EAAR,CAAR,IAAuBA,EAAlC,CAAR;AACA,QAAIT,CAAC,GAAGU,IAAI,CAACC,KAAL,CAAW,CAACZ,EAAE,GAAGQ,EAAE,IAAI,IAAIE,EAAR,CAAR,IAAuBA,EAAlC,CAAR;AACA,QAAIP,CAAC,GAAGQ,IAAI,CAACC,KAAL,CAAW,CAACV,EAAE,GAAGO,EAAE,IAAI,IAAIC,EAAR,CAAR,IAAuBA,EAAlC,CAAR;AACA,QAAInB,aAAa,CAACQ,CAAD,CAAb,IAAoBR,aAAa,CAACU,CAAD,CAAjC,IAAwCV,aAAa,CAACY,CAAD,CAAzD,EAA8D,OAAO,IAAIb,SAAJ,CAAc;AACjFS,MAAAA,CAAC,EAAEA,CAD8E;AAEjFE,MAAAA,CAAC,EAAEA,CAF8E;AAGjFE,MAAAA,CAAC,EAAEA,CAH8E;AAIjFE,MAAAA,CAAC,EAAEM,IAAI,CAACC,KAAL,CAAWF,EAAE,GAAG,GAAhB,IAAuB;AAJuD,KAAd,EAKlEG,WALkE,EAAP;AAM/D,GAvBiD,CAwBlD;;AACA;;;AACA,SAAO,IAAIvB,SAAJ,CAAc;AACnBS,IAAAA,CAAC,EAAED,EADgB;AAEnBG,IAAAA,CAAC,EAAED,EAFgB;AAGnBG,IAAAA,CAAC,EAAED,EAHgB;AAInBG,IAAAA,CAAC,EAAE;AAJgB,GAAd,EAKJQ,WALI,EAAP;AAMD;;AACD,eAAepB,aAAf","sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\nfunction getAlphaColor(frontColor, backgroundColor) {\n  var _TinyColor$toRgb = new TinyColor(frontColor).toRgb(),\n    fR = _TinyColor$toRgb.r,\n    fG = _TinyColor$toRgb.g,\n    fB = _TinyColor$toRgb.b,\n    originAlpha = _TinyColor$toRgb.a;\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n  var _TinyColor$toRgb2 = new TinyColor(backgroundColor).toRgb(),\n    bR = _TinyColor$toRgb2.r,\n    bG = _TinyColor$toRgb2.g,\n    bB = _TinyColor$toRgb2.b;\n  for (var fA = 0.01; fA <= 1; fA += 0.01) {\n    var r = Math.round((fR - bR * (1 - fA)) / fA);\n    var g = Math.round((fG - bG * (1 - fA)) / fA);\n    var b = Math.round((fB - bB * (1 - fA)) / fA);\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) return new TinyColor({\n      r: r,\n      g: g,\n      b: b,\n      a: Math.round(fA * 100) / 100\n    }).toRgbString();\n  }\n  // fallback\n  /* istanbul ignore next */\n  return new TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\nexport default getAlphaColor;"]},"metadata":{},"sourceType":"module"}