{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport EnterOutlined from \"@ant-design/icons/es/icons/EnterOutlined\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport TextArea from '../input/TextArea';\nimport { cloneElement } from '../_util/reactNode';\nimport useStyle from './style';\n\nvar Editable = function Editable(_ref) {\n  var prefixCls = _ref.prefixCls,\n      ariaLabel = _ref['aria-label'],\n      className = _ref.className,\n      style = _ref.style,\n      direction = _ref.direction,\n      maxLength = _ref.maxLength,\n      _ref$autoSize = _ref.autoSize,\n      autoSize = _ref$autoSize === void 0 ? true : _ref$autoSize,\n      value = _ref.value,\n      onSave = _ref.onSave,\n      onCancel = _ref.onCancel,\n      onEnd = _ref.onEnd,\n      component = _ref.component,\n      _ref$enterIcon = _ref.enterIcon,\n      enterIcon = _ref$enterIcon === void 0 ? /*#__PURE__*/React.createElement(EnterOutlined, null) : _ref$enterIcon;\n  var ref = React.useRef(null);\n  var inComposition = React.useRef(false);\n  var lastKeyCode = React.useRef();\n\n  var _React$useState = React.useState(value),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      current = _React$useState2[0],\n      setCurrent = _React$useState2[1];\n\n  React.useEffect(function () {\n    setCurrent(value);\n  }, [value]);\n  React.useEffect(function () {\n    if (ref.current && ref.current.resizableTextArea) {\n      var textArea = ref.current.resizableTextArea.textArea;\n      textArea.focus();\n      var length = textArea.value.length;\n      textArea.setSelectionRange(length, length);\n    }\n  }, []);\n\n  var onChange = function onChange(_ref2) {\n    var target = _ref2.target;\n    setCurrent(target.value.replace(/[\\n\\r]/g, ''));\n  };\n\n  var onCompositionStart = function onCompositionStart() {\n    inComposition.current = true;\n  };\n\n  var onCompositionEnd = function onCompositionEnd() {\n    inComposition.current = false;\n  };\n\n  var onKeyDown = function onKeyDown(_ref3) {\n    var keyCode = _ref3.keyCode; // We don't record keyCode when IME is using\n\n    if (inComposition.current) return;\n    lastKeyCode.current = keyCode;\n  };\n\n  var confirmChange = function confirmChange() {\n    onSave(current.trim());\n  };\n\n  var onKeyUp = function onKeyUp(_ref4) {\n    var keyCode = _ref4.keyCode,\n        ctrlKey = _ref4.ctrlKey,\n        altKey = _ref4.altKey,\n        metaKey = _ref4.metaKey,\n        shiftKey = _ref4.shiftKey; // Check if it's a real key\n\n    if (lastKeyCode.current === keyCode && !inComposition.current && !ctrlKey && !altKey && !metaKey && !shiftKey) {\n      if (keyCode === KeyCode.ENTER) {\n        confirmChange();\n        onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n      } else if (keyCode === KeyCode.ESC) {\n        onCancel();\n      }\n    }\n  };\n\n  var onBlur = function onBlur() {\n    confirmChange();\n  };\n\n  var textClassName = component ? prefixCls + \"-\" + component : '';\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  var textAreaClassName = classNames(prefixCls, prefixCls + \"-edit-content\", _defineProperty({}, prefixCls + \"-rtl\", direction === 'rtl'), className, textClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: textAreaClassName,\n    style: style\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    ref: ref,\n    maxLength: maxLength,\n    value: current,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd,\n    onBlur: onBlur,\n    \"aria-label\": ariaLabel,\n    rows: 1,\n    autoSize: autoSize\n  }), enterIcon !== null ? cloneElement(enterIcon, {\n    className: prefixCls + \"-edit-content-confirm\"\n  }) : null));\n};\n\nexport default Editable;","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/antd/es/typography/Editable.js"],"names":["_defineProperty","_slicedToArray","EnterOutlined","classNames","KeyCode","React","TextArea","cloneElement","useStyle","Editable","_ref","prefixCls","ariaLabel","className","style","direction","maxLength","_ref$autoSize","autoSize","value","onSave","onCancel","onEnd","component","_ref$enterIcon","enterIcon","createElement","ref","useRef","inComposition","lastKeyCode","_React$useState","useState","_React$useState2","current","setCurrent","useEffect","resizableTextArea","textArea","focus","length","setSelectionRange","onChange","_ref2","target","replace","onCompositionStart","onCompositionEnd","onKeyDown","_ref3","keyCode","confirmChange","trim","onKeyUp","_ref4","ctrlKey","altKey","metaKey","shiftKey","ENTER","ESC","onBlur","textClassName","_useStyle","_useStyle2","wrapSSR","hashId","textAreaClassName","rows"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport EnterOutlined from \"@ant-design/icons/es/icons/EnterOutlined\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport * as React from 'react';\nimport TextArea from '../input/TextArea';\nimport { cloneElement } from '../_util/reactNode';\nimport useStyle from './style';\nvar Editable = function Editable(_ref) {\n  var prefixCls = _ref.prefixCls,\n    ariaLabel = _ref['aria-label'],\n    className = _ref.className,\n    style = _ref.style,\n    direction = _ref.direction,\n    maxLength = _ref.maxLength,\n    _ref$autoSize = _ref.autoSize,\n    autoSize = _ref$autoSize === void 0 ? true : _ref$autoSize,\n    value = _ref.value,\n    onSave = _ref.onSave,\n    onCancel = _ref.onCancel,\n    onEnd = _ref.onEnd,\n    component = _ref.component,\n    _ref$enterIcon = _ref.enterIcon,\n    enterIcon = _ref$enterIcon === void 0 ? /*#__PURE__*/React.createElement(EnterOutlined, null) : _ref$enterIcon;\n  var ref = React.useRef(null);\n  var inComposition = React.useRef(false);\n  var lastKeyCode = React.useRef();\n  var _React$useState = React.useState(value),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    current = _React$useState2[0],\n    setCurrent = _React$useState2[1];\n  React.useEffect(function () {\n    setCurrent(value);\n  }, [value]);\n  React.useEffect(function () {\n    if (ref.current && ref.current.resizableTextArea) {\n      var textArea = ref.current.resizableTextArea.textArea;\n      textArea.focus();\n      var length = textArea.value.length;\n      textArea.setSelectionRange(length, length);\n    }\n  }, []);\n  var onChange = function onChange(_ref2) {\n    var target = _ref2.target;\n    setCurrent(target.value.replace(/[\\n\\r]/g, ''));\n  };\n  var onCompositionStart = function onCompositionStart() {\n    inComposition.current = true;\n  };\n  var onCompositionEnd = function onCompositionEnd() {\n    inComposition.current = false;\n  };\n  var onKeyDown = function onKeyDown(_ref3) {\n    var keyCode = _ref3.keyCode;\n    // We don't record keyCode when IME is using\n    if (inComposition.current) return;\n    lastKeyCode.current = keyCode;\n  };\n  var confirmChange = function confirmChange() {\n    onSave(current.trim());\n  };\n  var onKeyUp = function onKeyUp(_ref4) {\n    var keyCode = _ref4.keyCode,\n      ctrlKey = _ref4.ctrlKey,\n      altKey = _ref4.altKey,\n      metaKey = _ref4.metaKey,\n      shiftKey = _ref4.shiftKey;\n    // Check if it's a real key\n    if (lastKeyCode.current === keyCode && !inComposition.current && !ctrlKey && !altKey && !metaKey && !shiftKey) {\n      if (keyCode === KeyCode.ENTER) {\n        confirmChange();\n        onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n      } else if (keyCode === KeyCode.ESC) {\n        onCancel();\n      }\n    }\n  };\n  var onBlur = function onBlur() {\n    confirmChange();\n  };\n  var textClassName = component ? prefixCls + \"-\" + component : '';\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  var textAreaClassName = classNames(prefixCls, prefixCls + \"-edit-content\", _defineProperty({}, prefixCls + \"-rtl\", direction === 'rtl'), className, textClassName, hashId);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: textAreaClassName,\n    style: style\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    ref: ref,\n    maxLength: maxLength,\n    value: current,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd,\n    onBlur: onBlur,\n    \"aria-label\": ariaLabel,\n    rows: 1,\n    autoSize: autoSize\n  }), enterIcon !== null ? cloneElement(enterIcon, {\n    className: prefixCls + \"-edit-content-confirm\"\n  }) : null));\n};\nexport default Editable;"]},"metadata":{},"sourceType":"module"}