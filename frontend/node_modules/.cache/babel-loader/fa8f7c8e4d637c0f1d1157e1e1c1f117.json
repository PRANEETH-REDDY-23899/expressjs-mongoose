{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonNode from './Node';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\n\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n\n  return {};\n}\n\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\n\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n\n  return {};\n}\n\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {}; // Width\n\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  } // Rows\n\n\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n\n  return basicProps;\n}\n\nvar Skeleton = function Skeleton(props) {\n  var customizePrefixCls = props.prefixCls,\n      loading = props.loading,\n      className = props.className,\n      style = props.style,\n      children = props.children,\n      _props$avatar = props.avatar,\n      avatar = _props$avatar === void 0 ? false : _props$avatar,\n      _props$title = props.title,\n      title = _props$title === void 0 ? true : _props$title,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? true : _props$paragraph,\n      active = props.active,\n      round = props.round;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  if (loading || !('loading' in props)) {\n    var _classNames;\n\n    var hasAvatar = !!avatar;\n    var hasTitle = !!title;\n    var hasParagraph = !!paragraph; // Avatar\n\n    var avatarNode;\n\n    if (hasAvatar) {\n      var avatarProps = _extends(_extends({\n        prefixCls: prefixCls + \"-avatar\"\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar)); // We direct use SkeletonElement as avatar in skeleton internal.\n\n\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: prefixCls + \"-header\"\n      }, /*#__PURE__*/React.createElement(Element, _extends({}, avatarProps)));\n    }\n\n    var contentNode;\n\n    if (hasTitle || hasParagraph) {\n      // Title\n      var $title;\n\n      if (hasTitle) {\n        var titleProps = _extends(_extends({\n          prefixCls: prefixCls + \"-title\"\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n\n        $title = /*#__PURE__*/React.createElement(Title, _extends({}, titleProps));\n      } // Paragraph\n\n\n      var paragraphNode;\n\n      if (hasParagraph) {\n        var paragraphProps = _extends(_extends({\n          prefixCls: prefixCls + \"-paragraph\"\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, _extends({}, paragraphProps));\n      }\n\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: prefixCls + \"-content\"\n      }, $title, paragraphNode);\n    }\n\n    var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + \"-with-avatar\", hasAvatar), _defineProperty(_classNames, prefixCls + \"-active\", active), _defineProperty(_classNames, prefixCls + \"-rtl\", direction === 'rtl'), _defineProperty(_classNames, prefixCls + \"-round\", round), _classNames), className, hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, avatarNode, contentNode));\n  }\n\n  return typeof children !== 'undefined' ? children : null;\n};\n\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nexport default Skeleton;","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/antd/es/skeleton/Skeleton.js"],"names":["_defineProperty","_extends","_slicedToArray","_typeof","classNames","React","ConfigContext","SkeletonAvatar","SkeletonButton","SkeletonNode","Element","SkeletonImage","SkeletonInput","Paragraph","Title","useStyle","getComponentProps","prop","getAvatarBasicProps","hasTitle","hasParagraph","size","shape","getTitleBasicProps","hasAvatar","width","getParagraphBasicProps","basicProps","rows","Skeleton","props","customizePrefixCls","prefixCls","loading","className","style","children","_props$avatar","avatar","_props$title","title","_props$paragraph","paragraph","active","round","_React$useContext","useContext","getPrefixCls","direction","_useStyle","_useStyle2","wrapSSR","hashId","_classNames","avatarNode","avatarProps","createElement","contentNode","$title","titleProps","paragraphNode","paragraphProps","cls","Button","Avatar","Input","Image","Node"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,2CAA5B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,cAAP,MAA2B,UAA3B;AACA,OAAOC,cAAP,MAA2B,UAA3B;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,aAAP,MAA0B,SAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,SAArB;;AACA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,MAAIA,IAAI,IAAId,OAAO,CAACc,IAAD,CAAP,KAAkB,QAA9B,EAAwC;AACtC,WAAOA,IAAP;AACD;;AACD,SAAO,EAAP;AACD;;AACD,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,YAAvC,EAAqD;AACnD,MAAID,QAAQ,IAAI,CAACC,YAAjB,EAA+B;AAC7B;AACA,WAAO;AACLC,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAP;AAID;;AACD,SAAO;AACLD,IAAAA,IAAI,EAAE,OADD;AAELC,IAAAA,KAAK,EAAE;AAFF,GAAP;AAID;;AACD,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCJ,YAAvC,EAAqD;AACnD,MAAI,CAACI,SAAD,IAAcJ,YAAlB,EAAgC;AAC9B,WAAO;AACLK,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD;;AACD,MAAID,SAAS,IAAIJ,YAAjB,EAA+B;AAC7B,WAAO;AACLK,MAAAA,KAAK,EAAE;AADF,KAAP;AAGD;;AACD,SAAO,EAAP;AACD;;AACD,SAASC,sBAAT,CAAgCF,SAAhC,EAA2CL,QAA3C,EAAqD;AACnD,MAAIQ,UAAU,GAAG,EAAjB,CADmD,CAEnD;;AACA,MAAI,CAACH,SAAD,IAAc,CAACL,QAAnB,EAA6B;AAC3BQ,IAAAA,UAAU,CAACF,KAAX,GAAmB,KAAnB;AACD,GALkD,CAMnD;;;AACA,MAAI,CAACD,SAAD,IAAcL,QAAlB,EAA4B;AAC1BQ,IAAAA,UAAU,CAACC,IAAX,GAAkB,CAAlB;AACD,GAFD,MAEO;AACLD,IAAAA,UAAU,CAACC,IAAX,GAAkB,CAAlB;AACD;;AACD,SAAOD,UAAP;AACD;;AACD,IAAIE,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAIC,kBAAkB,GAAGD,KAAK,CAACE,SAA/B;AAAA,MACEC,OAAO,GAAGH,KAAK,CAACG,OADlB;AAAA,MAEEC,SAAS,GAAGJ,KAAK,CAACI,SAFpB;AAAA,MAGEC,KAAK,GAAGL,KAAK,CAACK,KAHhB;AAAA,MAIEC,QAAQ,GAAGN,KAAK,CAACM,QAJnB;AAAA,MAKEC,aAAa,GAAGP,KAAK,CAACQ,MALxB;AAAA,MAMEA,MAAM,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,KAA3B,GAAmCA,aAN9C;AAAA,MAOEE,YAAY,GAAGT,KAAK,CAACU,KAPvB;AAAA,MAQEA,KAAK,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,IAA1B,GAAiCA,YAR3C;AAAA,MASEE,gBAAgB,GAAGX,KAAK,CAACY,SAT3B;AAAA,MAUEA,SAAS,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,IAA9B,GAAqCA,gBAVnD;AAAA,MAWEE,MAAM,GAAGb,KAAK,CAACa,MAXjB;AAAA,MAYEC,KAAK,GAAGd,KAAK,CAACc,KAZhB;;AAaA,MAAIC,iBAAiB,GAAGxC,KAAK,CAACyC,UAAN,CAAiBxC,aAAjB,CAAxB;AAAA,MACEyC,YAAY,GAAGF,iBAAiB,CAACE,YADnC;AAAA,MAEEC,SAAS,GAAGH,iBAAiB,CAACG,SAFhC;;AAGA,MAAIhB,SAAS,GAAGe,YAAY,CAAC,UAAD,EAAahB,kBAAb,CAA5B;;AACA,MAAIkB,SAAS,GAAGlC,QAAQ,CAACiB,SAAD,CAAxB;AAAA,MACEkB,UAAU,GAAGhD,cAAc,CAAC+C,SAAD,EAAY,CAAZ,CAD7B;AAAA,MAEEE,OAAO,GAAGD,UAAU,CAAC,CAAD,CAFtB;AAAA,MAGEE,MAAM,GAAGF,UAAU,CAAC,CAAD,CAHrB;;AAIA,MAAIjB,OAAO,IAAI,EAAE,aAAaH,KAAf,CAAf,EAAsC;AACpC,QAAIuB,WAAJ;;AACA,QAAI7B,SAAS,GAAG,CAAC,CAACc,MAAlB;AACA,QAAInB,QAAQ,GAAG,CAAC,CAACqB,KAAjB;AACA,QAAIpB,YAAY,GAAG,CAAC,CAACsB,SAArB,CAJoC,CAKpC;;AACA,QAAIY,UAAJ;;AACA,QAAI9B,SAAJ,EAAe;AACb,UAAI+B,WAAW,GAAGtD,QAAQ,CAACA,QAAQ,CAAC;AAClC+B,QAAAA,SAAS,EAAEA,SAAS,GAAG;AADW,OAAD,EAEhCd,mBAAmB,CAACC,QAAD,EAAWC,YAAX,CAFa,CAAT,EAEuBJ,iBAAiB,CAACsB,MAAD,CAFxC,CAA1B,CADa,CAIb;;;AACAgB,MAAAA,UAAU,GAAG,aAAajD,KAAK,CAACmD,aAAN,CAAoB,KAApB,EAA2B;AACnDtB,QAAAA,SAAS,EAAEF,SAAS,GAAG;AAD4B,OAA3B,EAEvB,aAAa3B,KAAK,CAACmD,aAAN,CAAoB9C,OAApB,EAA6BT,QAAQ,CAAC,EAAD,EAAKsD,WAAL,CAArC,CAFU,CAA1B;AAGD;;AACD,QAAIE,WAAJ;;AACA,QAAItC,QAAQ,IAAIC,YAAhB,EAA8B;AAC5B;AACA,UAAIsC,MAAJ;;AACA,UAAIvC,QAAJ,EAAc;AACZ,YAAIwC,UAAU,GAAG1D,QAAQ,CAACA,QAAQ,CAAC;AACjC+B,UAAAA,SAAS,EAAEA,SAAS,GAAG;AADU,SAAD,EAE/BT,kBAAkB,CAACC,SAAD,EAAYJ,YAAZ,CAFa,CAAT,EAEwBJ,iBAAiB,CAACwB,KAAD,CAFzC,CAAzB;;AAGAkB,QAAAA,MAAM,GAAG,aAAarD,KAAK,CAACmD,aAAN,CAAoB1C,KAApB,EAA2Bb,QAAQ,CAAC,EAAD,EAAK0D,UAAL,CAAnC,CAAtB;AACD,OAR2B,CAS5B;;;AACA,UAAIC,aAAJ;;AACA,UAAIxC,YAAJ,EAAkB;AAChB,YAAIyC,cAAc,GAAG5D,QAAQ,CAACA,QAAQ,CAAC;AACrC+B,UAAAA,SAAS,EAAEA,SAAS,GAAG;AADc,SAAD,EAEnCN,sBAAsB,CAACF,SAAD,EAAYL,QAAZ,CAFa,CAAT,EAEoBH,iBAAiB,CAAC0B,SAAD,CAFrC,CAA7B;;AAGAkB,QAAAA,aAAa,GAAG,aAAavD,KAAK,CAACmD,aAAN,CAAoB3C,SAApB,EAA+BZ,QAAQ,CAAC,EAAD,EAAK4D,cAAL,CAAvC,CAA7B;AACD;;AACDJ,MAAAA,WAAW,GAAG,aAAapD,KAAK,CAACmD,aAAN,CAAoB,KAApB,EAA2B;AACpDtB,QAAAA,SAAS,EAAEF,SAAS,GAAG;AAD6B,OAA3B,EAExB0B,MAFwB,EAEhBE,aAFgB,CAA3B;AAGD;;AACD,QAAIE,GAAG,GAAG1D,UAAU,CAAC4B,SAAD,GAAaqB,WAAW,GAAG,EAAd,EAAkBrD,eAAe,CAACqD,WAAD,EAAcrB,SAAS,GAAG,cAA1B,EAA0CR,SAA1C,CAAjC,EAAuFxB,eAAe,CAACqD,WAAD,EAAcrB,SAAS,GAAG,SAA1B,EAAqCW,MAArC,CAAtG,EAAoJ3C,eAAe,CAACqD,WAAD,EAAcrB,SAAS,GAAG,MAA1B,EAAkCgB,SAAS,KAAK,KAAhD,CAAnK,EAA2NhD,eAAe,CAACqD,WAAD,EAAcrB,SAAS,GAAG,QAA1B,EAAoCY,KAApC,CAA1O,EAAsRS,WAAnS,GAAiTnB,SAAjT,EAA4TkB,MAA5T,CAApB;AACA,WAAOD,OAAO,EAAE,aAAa9C,KAAK,CAACmD,aAAN,CAAoB,KAApB,EAA2B;AACtDtB,MAAAA,SAAS,EAAE4B,GAD2C;AAEtD3B,MAAAA,KAAK,EAAEA;AAF+C,KAA3B,EAG1BmB,UAH0B,EAGdG,WAHc,CAAf,CAAd;AAID;;AACD,SAAO,OAAOrB,QAAP,KAAoB,WAApB,GAAkCA,QAAlC,GAA6C,IAApD;AACD,CAnED;;AAoEAP,QAAQ,CAACkC,MAAT,GAAkBvD,cAAlB;AACAqB,QAAQ,CAACmC,MAAT,GAAkBzD,cAAlB;AACAsB,QAAQ,CAACoC,KAAT,GAAiBrD,aAAjB;AACAiB,QAAQ,CAACqC,KAAT,GAAiBvD,aAAjB;AACAkB,QAAQ,CAACsC,IAAT,GAAgB1D,YAAhB;AACA,eAAeoB,QAAf","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport SkeletonAvatar from './Avatar';\nimport SkeletonButton from './Button';\nimport SkeletonNode from './Node';\nimport Element from './Element';\nimport SkeletonImage from './Image';\nimport SkeletonInput from './Input';\nimport Paragraph from './Paragraph';\nimport Title from './Title';\nimport useStyle from './style';\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nvar Skeleton = function Skeleton(props) {\n  var customizePrefixCls = props.prefixCls,\n    loading = props.loading,\n    className = props.className,\n    style = props.style,\n    children = props.children,\n    _props$avatar = props.avatar,\n    avatar = _props$avatar === void 0 ? false : _props$avatar,\n    _props$title = props.title,\n    title = _props$title === void 0 ? true : _props$title,\n    _props$paragraph = props.paragraph,\n    paragraph = _props$paragraph === void 0 ? true : _props$paragraph,\n    active = props.active,\n    round = props.round;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  if (loading || !('loading' in props)) {\n    var _classNames;\n    var hasAvatar = !!avatar;\n    var hasTitle = !!title;\n    var hasParagraph = !!paragraph;\n    // Avatar\n    var avatarNode;\n    if (hasAvatar) {\n      var avatarProps = _extends(_extends({\n        prefixCls: prefixCls + \"-avatar\"\n      }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n      // We direct use SkeletonElement as avatar in skeleton internal.\n      avatarNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: prefixCls + \"-header\"\n      }, /*#__PURE__*/React.createElement(Element, _extends({}, avatarProps)));\n    }\n    var contentNode;\n    if (hasTitle || hasParagraph) {\n      // Title\n      var $title;\n      if (hasTitle) {\n        var titleProps = _extends(_extends({\n          prefixCls: prefixCls + \"-title\"\n        }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n        $title = /*#__PURE__*/React.createElement(Title, _extends({}, titleProps));\n      }\n      // Paragraph\n      var paragraphNode;\n      if (hasParagraph) {\n        var paragraphProps = _extends(_extends({\n          prefixCls: prefixCls + \"-paragraph\"\n        }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n        paragraphNode = /*#__PURE__*/React.createElement(Paragraph, _extends({}, paragraphProps));\n      }\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        className: prefixCls + \"-content\"\n      }, $title, paragraphNode);\n    }\n    var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + \"-with-avatar\", hasAvatar), _defineProperty(_classNames, prefixCls + \"-active\", active), _defineProperty(_classNames, prefixCls + \"-rtl\", direction === 'rtl'), _defineProperty(_classNames, prefixCls + \"-round\", round), _classNames), className, hashId);\n    return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n      className: cls,\n      style: style\n    }, avatarNode, contentNode));\n  }\n  return typeof children !== 'undefined' ? children : null;\n};\nSkeleton.Button = SkeletonButton;\nSkeleton.Avatar = SkeletonAvatar;\nSkeleton.Input = SkeletonInput;\nSkeleton.Image = SkeletonImage;\nSkeleton.Node = SkeletonNode;\nexport default Skeleton;"]},"metadata":{},"sourceType":"module"}