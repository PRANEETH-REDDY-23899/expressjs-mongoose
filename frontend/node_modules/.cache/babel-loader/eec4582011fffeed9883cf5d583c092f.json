{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { render } from \"rc-util/es/React/render\";\nimport * as React from 'react';\nimport ConfigProvider, { globalConfig } from '../config-provider';\nimport PurePanel from './PurePanel';\nimport useNotification, { useInternalNotification } from './useNotification';\nvar notification = null;\n\nvar act = function act(callback) {\n  return callback();\n};\n\nvar taskQueue = [];\nvar defaultGlobalConfig = {};\n\nfunction getGlobalContext() {\n  var _defaultGlobalConfig = defaultGlobalConfig,\n      globalPrefixCls = _defaultGlobalConfig.prefixCls,\n      globalGetContainer = _defaultGlobalConfig.getContainer,\n      rtl = _defaultGlobalConfig.rtl,\n      maxCount = _defaultGlobalConfig.maxCount,\n      top = _defaultGlobalConfig.top,\n      bottom = _defaultGlobalConfig.bottom;\n  var mergedPrefixCls = globalPrefixCls !== null && globalPrefixCls !== void 0 ? globalPrefixCls : globalConfig().getPrefixCls('notification');\n  var mergedContainer = (globalGetContainer === null || globalGetContainer === void 0 ? void 0 : globalGetContainer()) || document.body;\n  return {\n    prefixCls: mergedPrefixCls,\n    container: mergedContainer,\n    rtl: rtl,\n    maxCount: maxCount,\n    top: top,\n    bottom: bottom\n  };\n}\n\nvar GlobalHolder = /*#__PURE__*/React.forwardRef(function (_, ref) {\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prefixCls = _React$useState2[0],\n      setPrefixCls = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      container = _React$useState4[0],\n      setContainer = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      maxCount = _React$useState6[0],\n      setMaxCount = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      rtl = _React$useState8[0],\n      setRTL = _React$useState8[1];\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      top = _React$useState10[0],\n      setTop = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      bottom = _React$useState12[0],\n      setBottom = _React$useState12[1];\n\n  var _useInternalNotificat = useInternalNotification({\n    prefixCls: prefixCls,\n    getContainer: function getContainer() {\n      return container;\n    },\n    maxCount: maxCount,\n    rtl: rtl,\n    top: top,\n    bottom: bottom\n  }),\n      _useInternalNotificat2 = _slicedToArray(_useInternalNotificat, 2),\n      api = _useInternalNotificat2[0],\n      holder = _useInternalNotificat2[1];\n\n  var global = globalConfig();\n  var rootPrefixCls = global.getRootPrefixCls();\n  var rootIconPrefixCls = global.getIconPrefixCls();\n\n  var sync = function sync() {\n    var _getGlobalContext = getGlobalContext(),\n        nextGlobalPrefixCls = _getGlobalContext.prefixCls,\n        nextGlobalContainer = _getGlobalContext.container,\n        nextGlobalMaxCount = _getGlobalContext.maxCount,\n        nextGlobalRTL = _getGlobalContext.rtl,\n        nextTop = _getGlobalContext.top,\n        nextBottom = _getGlobalContext.bottom;\n\n    setPrefixCls(nextGlobalPrefixCls);\n    setContainer(nextGlobalContainer);\n    setMaxCount(nextGlobalMaxCount);\n    setRTL(nextGlobalRTL);\n    setTop(nextTop);\n    setBottom(nextBottom);\n  };\n\n  React.useEffect(sync, []);\n  React.useImperativeHandle(ref, function () {\n    var instance = _extends({}, api);\n\n    Object.keys(instance).forEach(function (method) {\n      instance[method] = function () {\n        sync();\n        return api[method].apply(api, arguments);\n      };\n    });\n    return {\n      instance: instance,\n      sync: sync\n    };\n  });\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: rootIconPrefixCls\n  }, holder);\n});\n\nfunction flushNotice() {\n  if (!notification) {\n    var holderFragment = document.createDocumentFragment();\n    var newNotification = {\n      fragment: holderFragment\n    };\n    notification = newNotification; // Delay render to avoid sync issue\n\n    act(function () {\n      render( /*#__PURE__*/React.createElement(GlobalHolder, {\n        ref: function ref(node) {\n          var _ref = node || {},\n              instance = _ref.instance,\n              sync = _ref.sync;\n\n          Promise.resolve().then(function () {\n            if (!newNotification.instance && instance) {\n              newNotification.instance = instance;\n              newNotification.sync = sync;\n              flushNotice();\n            }\n          });\n        }\n      }), holderFragment);\n    });\n    return;\n  } // Notification not ready\n\n\n  if (notification && !notification.instance) {\n    return;\n  } // >>> Execute task\n\n\n  taskQueue.forEach(function (task) {\n    // eslint-disable-next-line default-case\n    switch (task.type) {\n      case 'open':\n        {\n          act(function () {\n            notification.instance.open(_extends(_extends({}, defaultGlobalConfig), task.config));\n          });\n          break;\n        }\n\n      case 'destroy':\n        act(function () {\n          notification === null || notification === void 0 ? void 0 : notification.instance.destroy(task.key);\n        });\n        break;\n    }\n  }); // Clean up\n\n  taskQueue = [];\n} // ==============================================================================\n// ==                                  Export                                  ==\n// ==============================================================================\n\n\nvar methods = ['success', 'info', 'warning', 'error'];\n\nfunction setNotificationGlobalConfig(config) {\n  defaultGlobalConfig = _extends(_extends({}, defaultGlobalConfig), config); // Trigger sync for it\n\n  act(function () {\n    var _a;\n\n    (_a = notification === null || notification === void 0 ? void 0 : notification.sync) === null || _a === void 0 ? void 0 : _a.call(notification);\n  });\n}\n\nfunction open(config) {\n  taskQueue.push({\n    type: 'open',\n    config: config\n  });\n  flushNotice();\n}\n\nfunction destroy(key) {\n  taskQueue.push({\n    type: 'destroy',\n    key: key\n  });\n  flushNotice();\n}\n\nvar baseStaticMethods = {\n  open: open,\n  destroy: destroy,\n  config: setNotificationGlobalConfig,\n  useNotification: useNotification,\n  _InternalPanelDoNotUseOrYouWillBeFired: PurePanel\n};\nvar staticMethods = baseStaticMethods;\nmethods.forEach(function (type) {\n  staticMethods[type] = function (config) {\n    return open(_extends(_extends({}, config), {\n      type: type\n    }));\n  };\n}); // ==============================================================================\n// ==                                   Test                                   ==\n// ==============================================================================\n\nvar noop = function noop() {};\n/** @private Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\n\n\nexport var actWrapper = noop;\n\nif (process.env.NODE_ENV === 'test') {\n  actWrapper = function actWrapper(wrapper) {\n    act = wrapper;\n  };\n}\n\nexport default staticMethods;","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/antd/es/notification/index.js"],"names":["_extends","_slicedToArray","render","React","ConfigProvider","globalConfig","PurePanel","useNotification","useInternalNotification","notification","act","callback","taskQueue","defaultGlobalConfig","getGlobalContext","_defaultGlobalConfig","globalPrefixCls","prefixCls","globalGetContainer","getContainer","rtl","maxCount","top","bottom","mergedPrefixCls","getPrefixCls","mergedContainer","document","body","container","GlobalHolder","forwardRef","_","ref","_React$useState","useState","_React$useState2","setPrefixCls","_React$useState3","_React$useState4","setContainer","_React$useState5","_React$useState6","setMaxCount","_React$useState7","_React$useState8","setRTL","_React$useState9","_React$useState10","setTop","_React$useState11","_React$useState12","setBottom","_useInternalNotificat","_useInternalNotificat2","api","holder","global","rootPrefixCls","getRootPrefixCls","rootIconPrefixCls","getIconPrefixCls","sync","_getGlobalContext","nextGlobalPrefixCls","nextGlobalContainer","nextGlobalMaxCount","nextGlobalRTL","nextTop","nextBottom","useEffect","useImperativeHandle","instance","Object","keys","forEach","method","apply","arguments","createElement","iconPrefixCls","flushNotice","holderFragment","createDocumentFragment","newNotification","fragment","node","_ref","Promise","resolve","then","task","type","open","config","destroy","key","methods","setNotificationGlobalConfig","_a","call","push","baseStaticMethods","_InternalPanelDoNotUseOrYouWillBeFired","staticMethods","noop","actWrapper","process","env","NODE_ENV","wrapper"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { render } from \"rc-util/es/React/render\";\nimport * as React from 'react';\nimport ConfigProvider, { globalConfig } from '../config-provider';\nimport PurePanel from './PurePanel';\nimport useNotification, { useInternalNotification } from './useNotification';\nvar notification = null;\nvar act = function act(callback) {\n  return callback();\n};\nvar taskQueue = [];\nvar defaultGlobalConfig = {};\nfunction getGlobalContext() {\n  var _defaultGlobalConfig = defaultGlobalConfig,\n    globalPrefixCls = _defaultGlobalConfig.prefixCls,\n    globalGetContainer = _defaultGlobalConfig.getContainer,\n    rtl = _defaultGlobalConfig.rtl,\n    maxCount = _defaultGlobalConfig.maxCount,\n    top = _defaultGlobalConfig.top,\n    bottom = _defaultGlobalConfig.bottom;\n  var mergedPrefixCls = globalPrefixCls !== null && globalPrefixCls !== void 0 ? globalPrefixCls : globalConfig().getPrefixCls('notification');\n  var mergedContainer = (globalGetContainer === null || globalGetContainer === void 0 ? void 0 : globalGetContainer()) || document.body;\n  return {\n    prefixCls: mergedPrefixCls,\n    container: mergedContainer,\n    rtl: rtl,\n    maxCount: maxCount,\n    top: top,\n    bottom: bottom\n  };\n}\nvar GlobalHolder = /*#__PURE__*/React.forwardRef(function (_, ref) {\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    prefixCls = _React$useState2[0],\n    setPrefixCls = _React$useState2[1];\n  var _React$useState3 = React.useState(),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    container = _React$useState4[0],\n    setContainer = _React$useState4[1];\n  var _React$useState5 = React.useState(),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    maxCount = _React$useState6[0],\n    setMaxCount = _React$useState6[1];\n  var _React$useState7 = React.useState(),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    rtl = _React$useState8[0],\n    setRTL = _React$useState8[1];\n  var _React$useState9 = React.useState(),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    top = _React$useState10[0],\n    setTop = _React$useState10[1];\n  var _React$useState11 = React.useState(),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    bottom = _React$useState12[0],\n    setBottom = _React$useState12[1];\n  var _useInternalNotificat = useInternalNotification({\n      prefixCls: prefixCls,\n      getContainer: function getContainer() {\n        return container;\n      },\n      maxCount: maxCount,\n      rtl: rtl,\n      top: top,\n      bottom: bottom\n    }),\n    _useInternalNotificat2 = _slicedToArray(_useInternalNotificat, 2),\n    api = _useInternalNotificat2[0],\n    holder = _useInternalNotificat2[1];\n  var global = globalConfig();\n  var rootPrefixCls = global.getRootPrefixCls();\n  var rootIconPrefixCls = global.getIconPrefixCls();\n  var sync = function sync() {\n    var _getGlobalContext = getGlobalContext(),\n      nextGlobalPrefixCls = _getGlobalContext.prefixCls,\n      nextGlobalContainer = _getGlobalContext.container,\n      nextGlobalMaxCount = _getGlobalContext.maxCount,\n      nextGlobalRTL = _getGlobalContext.rtl,\n      nextTop = _getGlobalContext.top,\n      nextBottom = _getGlobalContext.bottom;\n    setPrefixCls(nextGlobalPrefixCls);\n    setContainer(nextGlobalContainer);\n    setMaxCount(nextGlobalMaxCount);\n    setRTL(nextGlobalRTL);\n    setTop(nextTop);\n    setBottom(nextBottom);\n  };\n  React.useEffect(sync, []);\n  React.useImperativeHandle(ref, function () {\n    var instance = _extends({}, api);\n    Object.keys(instance).forEach(function (method) {\n      instance[method] = function () {\n        sync();\n        return api[method].apply(api, arguments);\n      };\n    });\n    return {\n      instance: instance,\n      sync: sync\n    };\n  });\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: rootIconPrefixCls\n  }, holder);\n});\nfunction flushNotice() {\n  if (!notification) {\n    var holderFragment = document.createDocumentFragment();\n    var newNotification = {\n      fragment: holderFragment\n    };\n    notification = newNotification;\n    // Delay render to avoid sync issue\n    act(function () {\n      render( /*#__PURE__*/React.createElement(GlobalHolder, {\n        ref: function ref(node) {\n          var _ref = node || {},\n            instance = _ref.instance,\n            sync = _ref.sync;\n          Promise.resolve().then(function () {\n            if (!newNotification.instance && instance) {\n              newNotification.instance = instance;\n              newNotification.sync = sync;\n              flushNotice();\n            }\n          });\n        }\n      }), holderFragment);\n    });\n    return;\n  }\n  // Notification not ready\n  if (notification && !notification.instance) {\n    return;\n  }\n  // >>> Execute task\n  taskQueue.forEach(function (task) {\n    // eslint-disable-next-line default-case\n    switch (task.type) {\n      case 'open':\n        {\n          act(function () {\n            notification.instance.open(_extends(_extends({}, defaultGlobalConfig), task.config));\n          });\n          break;\n        }\n      case 'destroy':\n        act(function () {\n          notification === null || notification === void 0 ? void 0 : notification.instance.destroy(task.key);\n        });\n        break;\n    }\n  });\n  // Clean up\n  taskQueue = [];\n}\n// ==============================================================================\n// ==                                  Export                                  ==\n// ==============================================================================\nvar methods = ['success', 'info', 'warning', 'error'];\nfunction setNotificationGlobalConfig(config) {\n  defaultGlobalConfig = _extends(_extends({}, defaultGlobalConfig), config);\n  // Trigger sync for it\n  act(function () {\n    var _a;\n    (_a = notification === null || notification === void 0 ? void 0 : notification.sync) === null || _a === void 0 ? void 0 : _a.call(notification);\n  });\n}\nfunction open(config) {\n  taskQueue.push({\n    type: 'open',\n    config: config\n  });\n  flushNotice();\n}\nfunction destroy(key) {\n  taskQueue.push({\n    type: 'destroy',\n    key: key\n  });\n  flushNotice();\n}\nvar baseStaticMethods = {\n  open: open,\n  destroy: destroy,\n  config: setNotificationGlobalConfig,\n  useNotification: useNotification,\n  _InternalPanelDoNotUseOrYouWillBeFired: PurePanel\n};\nvar staticMethods = baseStaticMethods;\nmethods.forEach(function (type) {\n  staticMethods[type] = function (config) {\n    return open(_extends(_extends({}, config), {\n      type: type\n    }));\n  };\n});\n// ==============================================================================\n// ==                                   Test                                   ==\n// ==============================================================================\nvar noop = function noop() {};\n/** @private Only Work in test env */\n// eslint-disable-next-line import/no-mutable-exports\nexport var actWrapper = noop;\nif (process.env.NODE_ENV === 'test') {\n  actWrapper = function actWrapper(wrapper) {\n    act = wrapper;\n  };\n}\nexport default staticMethods;"]},"metadata":{},"sourceType":"module"}