{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { Popup } from 'rc-tooltip';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { parseColor } from './util'; // ant-tooltip css-dev-only-do-not-override-w2s56n ant-tooltip-placement-top  ant-tooltip-hidden\n\nexport default function PurePanel(props) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'top' : _props$placement,\n      title = props.title,\n      color = props.color,\n      overlayInnerStyle = props.overlayInnerStyle;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls;\n\n  var prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n\n  var _useStyle = useStyle(prefixCls, true),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1]; // Color\n\n\n  var colorInfo = parseColor(prefixCls, color);\n\n  var formattedOverlayInnerStyle = _extends(_extends({}, overlayInnerStyle), colorInfo.overlayStyle);\n\n  var arrowContentStyle = colorInfo.arrowStyle;\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(hashId, prefixCls, prefixCls + \"-pure\", prefixCls + \"-placement-\" + placement, className, colorInfo.className),\n    style: arrowContentStyle\n  }, /*#__PURE__*/React.createElement(Popup, _extends({}, props, {\n    className: hashId,\n    prefixCls: prefixCls,\n    overlayInnerStyle: formattedOverlayInnerStyle\n  }), title)));\n}","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/antd/es/tooltip/PurePanel.js"],"names":["_extends","_slicedToArray","React","Popup","classNames","ConfigContext","useStyle","parseColor","PurePanel","props","customizePrefixCls","prefixCls","className","_props$placement","placement","title","color","overlayInnerStyle","_React$useContext","useContext","getPrefixCls","_useStyle","_useStyle2","wrapSSR","hashId","colorInfo","formattedOverlayInnerStyle","overlayStyle","arrowContentStyle","arrowStyle","createElement","style"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,SAASC,UAAT,QAA2B,QAA3B,C,CACA;;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,MAAIC,kBAAkB,GAAGD,KAAK,CAACE,SAA/B;AAAA,MACEC,SAAS,GAAGH,KAAK,CAACG,SADpB;AAAA,MAEEC,gBAAgB,GAAGJ,KAAK,CAACK,SAF3B;AAAA,MAGEA,SAAS,GAAGD,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,KAA9B,GAAsCA,gBAHpD;AAAA,MAIEE,KAAK,GAAGN,KAAK,CAACM,KAJhB;AAAA,MAKEC,KAAK,GAAGP,KAAK,CAACO,KALhB;AAAA,MAMEC,iBAAiB,GAAGR,KAAK,CAACQ,iBAN5B;;AAOA,MAAIC,iBAAiB,GAAGhB,KAAK,CAACiB,UAAN,CAAiBd,aAAjB,CAAxB;AAAA,MACEe,YAAY,GAAGF,iBAAiB,CAACE,YADnC;;AAEA,MAAIT,SAAS,GAAGS,YAAY,CAAC,SAAD,EAAYV,kBAAZ,CAA5B;;AACA,MAAIW,SAAS,GAAGf,QAAQ,CAACK,SAAD,EAAY,IAAZ,CAAxB;AAAA,MACEW,UAAU,GAAGrB,cAAc,CAACoB,SAAD,EAAY,CAAZ,CAD7B;AAAA,MAEEE,OAAO,GAAGD,UAAU,CAAC,CAAD,CAFtB;AAAA,MAGEE,MAAM,GAAGF,UAAU,CAAC,CAAD,CAHrB,CAXuC,CAevC;;;AACA,MAAIG,SAAS,GAAGlB,UAAU,CAACI,SAAD,EAAYK,KAAZ,CAA1B;;AACA,MAAIU,0BAA0B,GAAG1B,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKiB,iBAAL,CAAT,EAAkCQ,SAAS,CAACE,YAA5C,CAAzC;;AACA,MAAIC,iBAAiB,GAAGH,SAAS,CAACI,UAAlC;AACA,SAAON,OAAO,EAAE,aAAarB,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B;AACtDlB,IAAAA,SAAS,EAAER,UAAU,CAACoB,MAAD,EAASb,SAAT,EAAoBA,SAAS,GAAG,OAAhC,EAAyCA,SAAS,GAAG,aAAZ,GAA4BG,SAArE,EAAgFF,SAAhF,EAA2Fa,SAAS,CAACb,SAArG,CADiC;AAEtDmB,IAAAA,KAAK,EAAEH;AAF+C,GAA3B,EAG1B,aAAa1B,KAAK,CAAC4B,aAAN,CAAoB3B,KAApB,EAA2BH,QAAQ,CAAC,EAAD,EAAKS,KAAL,EAAY;AAC7DG,IAAAA,SAAS,EAAEY,MADkD;AAE7Db,IAAAA,SAAS,EAAEA,SAFkD;AAG7DM,IAAAA,iBAAiB,EAAES;AAH0C,GAAZ,CAAnC,EAIZX,KAJY,CAHa,CAAf,CAAd;AAQD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { Popup } from 'rc-tooltip';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { parseColor } from './util';\n// ant-tooltip css-dev-only-do-not-override-w2s56n ant-tooltip-placement-top  ant-tooltip-hidden\nexport default function PurePanel(props) {\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'top' : _props$placement,\n    title = props.title,\n    color = props.color,\n    overlayInnerStyle = props.overlayInnerStyle;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n  var _useStyle = useStyle(prefixCls, true),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  // Color\n  var colorInfo = parseColor(prefixCls, color);\n  var formattedOverlayInnerStyle = _extends(_extends({}, overlayInnerStyle), colorInfo.overlayStyle);\n  var arrowContentStyle = colorInfo.arrowStyle;\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(hashId, prefixCls, prefixCls + \"-pure\", prefixCls + \"-placement-\" + placement, className, colorInfo.className),\n    style: arrowContentStyle\n  }, /*#__PURE__*/React.createElement(Popup, _extends({}, props, {\n    className: hashId,\n    prefixCls: prefixCls,\n    overlayInnerStyle: formattedOverlayInnerStyle\n  }), title)));\n}"]},"metadata":{},"sourceType":"module"}