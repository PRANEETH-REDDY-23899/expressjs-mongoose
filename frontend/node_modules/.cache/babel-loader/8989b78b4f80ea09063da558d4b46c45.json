{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport initCollapseMotion from '../_util/motion';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport renderSwitcherIcon from './utils/iconUtil';\nimport useStyle from './style';\nvar Tree = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      _props$showIcon = props.showIcon,\n      showIcon = _props$showIcon === void 0 ? false : _props$showIcon,\n      showLine = props.showLine,\n      _switcherIcon = props.switcherIcon,\n      _props$blockNode = props.blockNode,\n      blockNode = _props$blockNode === void 0 ? false : _props$blockNode,\n      children = props.children,\n      _props$checkable = props.checkable,\n      checkable = _props$checkable === void 0 ? false : _props$checkable,\n      _props$selectable = props.selectable,\n      selectable = _props$selectable === void 0 ? true : _props$selectable,\n      draggable = props.draggable,\n      customMotion = props.motion;\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  var rootPrefixCls = getPrefixCls();\n  var motion = customMotion !== null && customMotion !== void 0 ? customMotion : _extends(_extends({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n\n  var newProps = _extends(_extends({}, props), {\n    checkable: checkable,\n    selectable: selectable,\n    showIcon: showIcon,\n    motion: motion,\n    blockNode: blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender: dropIndicatorRender\n  });\n\n  var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n\n  var draggableConfig = React.useMemo(function () {\n    if (!draggable) {\n      return false;\n    }\n\n    var mergedDraggable = {};\n\n    switch (_typeof(draggable)) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n\n      case 'object':\n        mergedDraggable = _extends({}, draggable);\n        break;\n\n      default:\n        break;\n      // Do nothing\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n\n    return mergedDraggable;\n  }, [draggable]);\n  return wrapSSR( /*#__PURE__*/React.createElement(RcTree, _extends({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, prefixCls + \"-icon-hide\", !showIcon), _defineProperty(_classNames, prefixCls + \"-block-node\", blockNode), _defineProperty(_classNames, prefixCls + \"-unselectable\", !selectable), _defineProperty(_classNames, prefixCls + \"-rtl\", direction === 'rtl'), _classNames), className, hashId),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: prefixCls + \"-checkbox-inner\"\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(prefixCls, _switcherIcon, showLine, nodeProps);\n    },\n    draggable: draggableConfig\n  }), children));\n});\nexport default Tree;","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/antd/es/tree/Tree.js"],"names":["_defineProperty","_typeof","_slicedToArray","_extends","HolderOutlined","classNames","RcTree","React","ConfigContext","initCollapseMotion","dropIndicatorRender","renderSwitcherIcon","useStyle","Tree","forwardRef","props","ref","_classNames","_React$useContext","useContext","getPrefixCls","direction","virtual","customizePrefixCls","prefixCls","className","_props$showIcon","showIcon","showLine","_switcherIcon","switcherIcon","_props$blockNode","blockNode","children","_props$checkable","checkable","_props$selectable","selectable","draggable","customMotion","motion","rootPrefixCls","motionAppear","newProps","Boolean","_useStyle","_useStyle2","wrapSSR","hashId","draggableConfig","useMemo","mergedDraggable","nodeDraggable","icon","createElement","itemHeight","nodeProps"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport initCollapseMotion from '../_util/motion';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport renderSwitcherIcon from './utils/iconUtil';\nimport useStyle from './style';\nvar Tree = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction,\n    virtual = _React$useContext.virtual;\n  var customizePrefixCls = props.prefixCls,\n    className = props.className,\n    _props$showIcon = props.showIcon,\n    showIcon = _props$showIcon === void 0 ? false : _props$showIcon,\n    showLine = props.showLine,\n    _switcherIcon = props.switcherIcon,\n    _props$blockNode = props.blockNode,\n    blockNode = _props$blockNode === void 0 ? false : _props$blockNode,\n    children = props.children,\n    _props$checkable = props.checkable,\n    checkable = _props$checkable === void 0 ? false : _props$checkable,\n    _props$selectable = props.selectable,\n    selectable = _props$selectable === void 0 ? true : _props$selectable,\n    draggable = props.draggable,\n    customMotion = props.motion;\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  var rootPrefixCls = getPrefixCls();\n  var motion = customMotion !== null && customMotion !== void 0 ? customMotion : _extends(_extends({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  var newProps = _extends(_extends({}, props), {\n    checkable: checkable,\n    selectable: selectable,\n    showIcon: showIcon,\n    motion: motion,\n    blockNode: blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender: dropIndicatorRender\n  });\n  var _useStyle = useStyle(prefixCls),\n    _useStyle2 = _slicedToArray(_useStyle, 2),\n    wrapSSR = _useStyle2[0],\n    hashId = _useStyle2[1];\n  var draggableConfig = React.useMemo(function () {\n    if (!draggable) {\n      return false;\n    }\n    var mergedDraggable = {};\n    switch (_typeof(draggable)) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n      case 'object':\n        mergedDraggable = _extends({}, draggable);\n        break;\n      default:\n        break;\n      // Do nothing\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n    return mergedDraggable;\n  }, [draggable]);\n  return wrapSSR( /*#__PURE__*/React.createElement(RcTree, _extends({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: classNames((_classNames = {}, _defineProperty(_classNames, prefixCls + \"-icon-hide\", !showIcon), _defineProperty(_classNames, prefixCls + \"-block-node\", blockNode), _defineProperty(_classNames, prefixCls + \"-unselectable\", !selectable), _defineProperty(_classNames, prefixCls + \"-rtl\", direction === 'rtl'), _classNames), className, hashId),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: prefixCls + \"-checkbox-inner\"\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(prefixCls, _switcherIcon, showLine, nodeProps);\n    },\n    draggable: draggableConfig\n  }), children));\n});\nexport default Tree;"]},"metadata":{},"sourceType":"module"}