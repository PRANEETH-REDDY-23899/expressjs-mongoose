{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport { SubMenu as RcSubMenu, useFullPath } from 'rc-menu';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { cloneElement, isValidElement } from '../_util/reactNode';\nimport MenuContext from './MenuContext';\n\nfunction SubMenu(props) {\n  var _a;\n\n  var popupClassName = props.popupClassName,\n      icon = props.icon,\n      title = props.title,\n      customTheme = props.theme;\n  var context = React.useContext(MenuContext);\n  var prefixCls = context.prefixCls,\n      inlineCollapsed = context.inlineCollapsed,\n      contextTheme = context.theme,\n      mode = context.mode;\n  var parentPath = useFullPath();\n  var titleNode;\n\n  if (!icon) {\n    titleNode = inlineCollapsed && !parentPath.length && title && typeof title === 'string' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: prefixCls + \"-inline-collapsed-noicon\"\n    }, title.charAt(0)) : /*#__PURE__*/React.createElement(\"span\", {\n      className: prefixCls + \"-title-content\"\n    }, title);\n  } else {\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    var titleIsSpan = isValidElement(title) && title.type === 'span';\n    titleNode = /*#__PURE__*/React.createElement(React.Fragment, null, cloneElement(icon, {\n      className: classNames(isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', prefixCls + \"-item-icon\")\n    }), titleIsSpan ? title : /*#__PURE__*/React.createElement(\"span\", {\n      className: prefixCls + \"-title-content\"\n    }, title));\n  }\n\n  var contextValue = React.useMemo(function () {\n    return _extends(_extends({}, context), {\n      firstLevel: false\n    });\n  }, [context]);\n  var popupOffset = mode === 'horizontal' ? [0, 8] : [10, 0];\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(RcSubMenu, _extends({\n    popupOffset: popupOffset\n  }, omit(props, ['icon']), {\n    title: titleNode,\n    popupClassName: classNames(prefixCls, popupClassName, prefixCls + \"-\" + (customTheme || contextTheme))\n  })));\n}\n\nexport default SubMenu;","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/antd/es/menu/SubMenu.js"],"names":["_extends","classNames","SubMenu","RcSubMenu","useFullPath","omit","React","cloneElement","isValidElement","MenuContext","props","_a","popupClassName","icon","title","customTheme","theme","context","useContext","prefixCls","inlineCollapsed","contextTheme","mode","parentPath","titleNode","length","createElement","className","charAt","titleIsSpan","type","Fragment","contextValue","useMemo","firstLevel","popupOffset","Provider","value"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport { SubMenu as RcSubMenu, useFullPath } from 'rc-menu';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { cloneElement, isValidElement } from '../_util/reactNode';\nimport MenuContext from './MenuContext';\nfunction SubMenu(props) {\n  var _a;\n  var popupClassName = props.popupClassName,\n    icon = props.icon,\n    title = props.title,\n    customTheme = props.theme;\n  var context = React.useContext(MenuContext);\n  var prefixCls = context.prefixCls,\n    inlineCollapsed = context.inlineCollapsed,\n    contextTheme = context.theme,\n    mode = context.mode;\n  var parentPath = useFullPath();\n  var titleNode;\n  if (!icon) {\n    titleNode = inlineCollapsed && !parentPath.length && title && typeof title === 'string' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: prefixCls + \"-inline-collapsed-noicon\"\n    }, title.charAt(0)) : /*#__PURE__*/React.createElement(\"span\", {\n      className: prefixCls + \"-title-content\"\n    }, title);\n  } else {\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    var titleIsSpan = isValidElement(title) && title.type === 'span';\n    titleNode = /*#__PURE__*/React.createElement(React.Fragment, null, cloneElement(icon, {\n      className: classNames(isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', prefixCls + \"-item-icon\")\n    }), titleIsSpan ? title : /*#__PURE__*/React.createElement(\"span\", {\n      className: prefixCls + \"-title-content\"\n    }, title));\n  }\n  var contextValue = React.useMemo(function () {\n    return _extends(_extends({}, context), {\n      firstLevel: false\n    });\n  }, [context]);\n  var popupOffset = mode === 'horizontal' ? [0, 8] : [10, 0];\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(RcSubMenu, _extends({\n    popupOffset: popupOffset\n  }, omit(props, ['icon']), {\n    title: titleNode,\n    popupClassName: classNames(prefixCls, popupClassName, prefixCls + \"-\" + (customTheme || contextTheme))\n  })));\n}\nexport default SubMenu;"]},"metadata":{},"sourceType":"module"}