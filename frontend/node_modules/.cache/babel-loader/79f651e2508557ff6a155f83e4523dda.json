{"ast":null,"code":"export function getMotion(prefixCls, transitionName) {\n  return {\n    motionName: transitionName !== null && transitionName !== void 0 ? transitionName : prefixCls + \"-move-up\"\n  };\n}\n/** Wrap message open with promise like function */\n\nexport function wrapPromiseFn(openFn) {\n  var closeFn;\n  var closePromise = new Promise(function (resolve) {\n    closeFn = openFn(function () {\n      resolve(true);\n    });\n  });\n\n  var result = function result() {\n    closeFn === null || closeFn === void 0 ? void 0 : closeFn();\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/antd/es/message/util.js"],"names":["getMotion","prefixCls","transitionName","motionName","wrapPromiseFn","openFn","closeFn","closePromise","Promise","resolve","result","then","filled","rejected","promise"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,SAAnB,EAA8BC,cAA9B,EAA8C;AACnD,SAAO;AACLC,IAAAA,UAAU,EAAED,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuDA,cAAvD,GAAwED,SAAS,GAAG;AAD3F,GAAP;AAGD;AACD;;AACA,OAAO,SAASG,aAAT,CAAuBC,MAAvB,EAA+B;AACpC,MAAIC,OAAJ;AACA,MAAIC,YAAY,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAChDH,IAAAA,OAAO,GAAGD,MAAM,CAAC,YAAY;AAC3BI,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFe,CAAhB;AAGD,GAJkB,CAAnB;;AAKA,MAAIC,MAAM,GAAG,SAASA,MAAT,GAAkB;AAC7BJ,IAAAA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,EAAzD;AACD,GAFD;;AAGAI,EAAAA,MAAM,CAACC,IAAP,GAAc,UAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AACxC,WAAON,YAAY,CAACI,IAAb,CAAkBC,MAAlB,EAA0BC,QAA1B,CAAP;AACD,GAFD;;AAGAH,EAAAA,MAAM,CAACI,OAAP,GAAiBP,YAAjB;AACA,SAAOG,MAAP;AACD","sourcesContent":["export function getMotion(prefixCls, transitionName) {\n  return {\n    motionName: transitionName !== null && transitionName !== void 0 ? transitionName : prefixCls + \"-move-up\"\n  };\n}\n/** Wrap message open with promise like function */\nexport function wrapPromiseFn(openFn) {\n  var closeFn;\n  var closePromise = new Promise(function (resolve) {\n    closeFn = openFn(function () {\n      resolve(true);\n    });\n  });\n  var result = function result() {\n    closeFn === null || closeFn === void 0 ? void 0 : closeFn();\n  };\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n  result.promise = closePromise;\n  return result;\n}"]},"metadata":{},"sourceType":"module"}