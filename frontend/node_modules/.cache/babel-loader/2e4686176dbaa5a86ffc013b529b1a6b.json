{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { FormItemInputContext } from '../form/context';\nimport { Button, Group } from '../radio';\nimport Select from '../select';\nvar YearSelectOffset = 10;\nvar YearSelectTotal = 20;\n\nfunction YearSelect(props) {\n  var fullscreen = props.fullscreen,\n      validRange = props.validRange,\n      generateConfig = props.generateConfig,\n      locale = props.locale,\n      prefixCls = props.prefixCls,\n      value = props.value,\n      _onChange = props.onChange,\n      divRef = props.divRef;\n  var year = generateConfig.getYear(value || generateConfig.getNow());\n  var start = year - YearSelectOffset;\n  var end = start + YearSelectTotal;\n\n  if (validRange) {\n    start = generateConfig.getYear(validRange[0]);\n    end = generateConfig.getYear(validRange[1]) + 1;\n  }\n\n  var suffix = locale && locale.year === '年' ? '年' : '';\n  var options = [];\n\n  for (var index = start; index < end; index++) {\n    options.push({\n      label: \"\" + index + suffix,\n      value: index\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    options: options,\n    value: year,\n    className: prefixCls + \"-year-select\",\n    onChange: function onChange(numYear) {\n      var newDate = generateConfig.setYear(value, numYear);\n\n      if (validRange) {\n        var _validRange = _slicedToArray(validRange, 2),\n            startDate = _validRange[0],\n            endDate = _validRange[1];\n\n        var newYear = generateConfig.getYear(newDate);\n        var newMonth = generateConfig.getMonth(newDate);\n\n        if (newYear === generateConfig.getYear(endDate) && newMonth > generateConfig.getMonth(endDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(endDate));\n        }\n\n        if (newYear === generateConfig.getYear(startDate) && newMonth < generateConfig.getMonth(startDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(startDate));\n        }\n      }\n\n      _onChange(newDate);\n    },\n    getPopupContainer: function getPopupContainer() {\n      return divRef.current;\n    }\n  });\n}\n\nfunction MonthSelect(props) {\n  var prefixCls = props.prefixCls,\n      fullscreen = props.fullscreen,\n      validRange = props.validRange,\n      value = props.value,\n      generateConfig = props.generateConfig,\n      locale = props.locale,\n      _onChange2 = props.onChange,\n      divRef = props.divRef;\n  var month = generateConfig.getMonth(value || generateConfig.getNow());\n  var start = 0;\n  var end = 11;\n\n  if (validRange) {\n    var _validRange2 = _slicedToArray(validRange, 2),\n        rangeStart = _validRange2[0],\n        rangeEnd = _validRange2[1];\n\n    var currentYear = generateConfig.getYear(value);\n\n    if (generateConfig.getYear(rangeEnd) === currentYear) {\n      end = generateConfig.getMonth(rangeEnd);\n    }\n\n    if (generateConfig.getYear(rangeStart) === currentYear) {\n      start = generateConfig.getMonth(rangeStart);\n    }\n  }\n\n  var months = locale.shortMonths || generateConfig.locale.getShortMonths(locale.locale);\n  var options = [];\n\n  for (var index = start; index <= end; index += 1) {\n    options.push({\n      label: months[index],\n      value: index\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    className: prefixCls + \"-month-select\",\n    value: month,\n    options: options,\n    onChange: function onChange(newMonth) {\n      _onChange2(generateConfig.setMonth(value, newMonth));\n    },\n    getPopupContainer: function getPopupContainer() {\n      return divRef.current;\n    }\n  });\n}\n\nfunction ModeSwitch(props) {\n  var prefixCls = props.prefixCls,\n      locale = props.locale,\n      mode = props.mode,\n      fullscreen = props.fullscreen,\n      onModeChange = props.onModeChange;\n  return /*#__PURE__*/React.createElement(Group, {\n    onChange: function onChange(_ref) {\n      var value = _ref.target.value;\n      onModeChange(value);\n    },\n    value: mode,\n    size: fullscreen ? undefined : 'small',\n    className: prefixCls + \"-mode-switch\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    value: \"month\"\n  }, locale.month), /*#__PURE__*/React.createElement(Button, {\n    value: \"year\"\n  }, locale.year));\n}\n\nfunction CalendarHeader(props) {\n  var prefixCls = props.prefixCls,\n      fullscreen = props.fullscreen,\n      mode = props.mode,\n      onChange = props.onChange,\n      onModeChange = props.onModeChange;\n  var divRef = React.useRef(null);\n  var formItemInputContext = useContext(FormItemInputContext);\n  var mergedFormItemInputContext = useMemo(function () {\n    return _extends(_extends({}, formItemInputContext), {\n      isFormItemInput: false\n    });\n  }, [formItemInputContext]);\n\n  var sharedProps = _extends(_extends({}, props), {\n    onChange: onChange,\n    fullscreen: fullscreen,\n    divRef: divRef\n  });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: prefixCls + \"-header\",\n    ref: divRef\n  }, /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: mergedFormItemInputContext\n  }, /*#__PURE__*/React.createElement(YearSelect, _extends({}, sharedProps)), mode === 'month' && /*#__PURE__*/React.createElement(MonthSelect, _extends({}, sharedProps))), /*#__PURE__*/React.createElement(ModeSwitch, _extends({}, sharedProps, {\n    onModeChange: onModeChange\n  })));\n}\n\nexport default CalendarHeader;","map":{"version":3,"sources":["E:/railway/expressjs-mongoose/frontend/node_modules/antd/es/calendar/Header.js"],"names":["_extends","_slicedToArray","React","useContext","useMemo","FormItemInputContext","Button","Group","Select","YearSelectOffset","YearSelectTotal","YearSelect","props","fullscreen","validRange","generateConfig","locale","prefixCls","value","_onChange","onChange","divRef","year","getYear","getNow","start","end","suffix","options","index","push","label","createElement","size","undefined","className","numYear","newDate","setYear","_validRange","startDate","endDate","newYear","newMonth","getMonth","setMonth","getPopupContainer","current","MonthSelect","_onChange2","month","_validRange2","rangeStart","rangeEnd","currentYear","months","shortMonths","getShortMonths","ModeSwitch","mode","onModeChange","_ref","target","CalendarHeader","useRef","formItemInputContext","mergedFormItemInputContext","isFormItemInput","sharedProps","ref","Provider"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { FormItemInputContext } from '../form/context';\nimport { Button, Group } from '../radio';\nimport Select from '../select';\nvar YearSelectOffset = 10;\nvar YearSelectTotal = 20;\nfunction YearSelect(props) {\n  var fullscreen = props.fullscreen,\n    validRange = props.validRange,\n    generateConfig = props.generateConfig,\n    locale = props.locale,\n    prefixCls = props.prefixCls,\n    value = props.value,\n    _onChange = props.onChange,\n    divRef = props.divRef;\n  var year = generateConfig.getYear(value || generateConfig.getNow());\n  var start = year - YearSelectOffset;\n  var end = start + YearSelectTotal;\n  if (validRange) {\n    start = generateConfig.getYear(validRange[0]);\n    end = generateConfig.getYear(validRange[1]) + 1;\n  }\n  var suffix = locale && locale.year === '年' ? '年' : '';\n  var options = [];\n  for (var index = start; index < end; index++) {\n    options.push({\n      label: \"\" + index + suffix,\n      value: index\n    });\n  }\n  return /*#__PURE__*/React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    options: options,\n    value: year,\n    className: prefixCls + \"-year-select\",\n    onChange: function onChange(numYear) {\n      var newDate = generateConfig.setYear(value, numYear);\n      if (validRange) {\n        var _validRange = _slicedToArray(validRange, 2),\n          startDate = _validRange[0],\n          endDate = _validRange[1];\n        var newYear = generateConfig.getYear(newDate);\n        var newMonth = generateConfig.getMonth(newDate);\n        if (newYear === generateConfig.getYear(endDate) && newMonth > generateConfig.getMonth(endDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(endDate));\n        }\n        if (newYear === generateConfig.getYear(startDate) && newMonth < generateConfig.getMonth(startDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(startDate));\n        }\n      }\n      _onChange(newDate);\n    },\n    getPopupContainer: function getPopupContainer() {\n      return divRef.current;\n    }\n  });\n}\nfunction MonthSelect(props) {\n  var prefixCls = props.prefixCls,\n    fullscreen = props.fullscreen,\n    validRange = props.validRange,\n    value = props.value,\n    generateConfig = props.generateConfig,\n    locale = props.locale,\n    _onChange2 = props.onChange,\n    divRef = props.divRef;\n  var month = generateConfig.getMonth(value || generateConfig.getNow());\n  var start = 0;\n  var end = 11;\n  if (validRange) {\n    var _validRange2 = _slicedToArray(validRange, 2),\n      rangeStart = _validRange2[0],\n      rangeEnd = _validRange2[1];\n    var currentYear = generateConfig.getYear(value);\n    if (generateConfig.getYear(rangeEnd) === currentYear) {\n      end = generateConfig.getMonth(rangeEnd);\n    }\n    if (generateConfig.getYear(rangeStart) === currentYear) {\n      start = generateConfig.getMonth(rangeStart);\n    }\n  }\n  var months = locale.shortMonths || generateConfig.locale.getShortMonths(locale.locale);\n  var options = [];\n  for (var index = start; index <= end; index += 1) {\n    options.push({\n      label: months[index],\n      value: index\n    });\n  }\n  return /*#__PURE__*/React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    className: prefixCls + \"-month-select\",\n    value: month,\n    options: options,\n    onChange: function onChange(newMonth) {\n      _onChange2(generateConfig.setMonth(value, newMonth));\n    },\n    getPopupContainer: function getPopupContainer() {\n      return divRef.current;\n    }\n  });\n}\nfunction ModeSwitch(props) {\n  var prefixCls = props.prefixCls,\n    locale = props.locale,\n    mode = props.mode,\n    fullscreen = props.fullscreen,\n    onModeChange = props.onModeChange;\n  return /*#__PURE__*/React.createElement(Group, {\n    onChange: function onChange(_ref) {\n      var value = _ref.target.value;\n      onModeChange(value);\n    },\n    value: mode,\n    size: fullscreen ? undefined : 'small',\n    className: prefixCls + \"-mode-switch\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    value: \"month\"\n  }, locale.month), /*#__PURE__*/React.createElement(Button, {\n    value: \"year\"\n  }, locale.year));\n}\nfunction CalendarHeader(props) {\n  var prefixCls = props.prefixCls,\n    fullscreen = props.fullscreen,\n    mode = props.mode,\n    onChange = props.onChange,\n    onModeChange = props.onModeChange;\n  var divRef = React.useRef(null);\n  var formItemInputContext = useContext(FormItemInputContext);\n  var mergedFormItemInputContext = useMemo(function () {\n    return _extends(_extends({}, formItemInputContext), {\n      isFormItemInput: false\n    });\n  }, [formItemInputContext]);\n  var sharedProps = _extends(_extends({}, props), {\n    onChange: onChange,\n    fullscreen: fullscreen,\n    divRef: divRef\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: prefixCls + \"-header\",\n    ref: divRef\n  }, /*#__PURE__*/React.createElement(FormItemInputContext.Provider, {\n    value: mergedFormItemInputContext\n  }, /*#__PURE__*/React.createElement(YearSelect, _extends({}, sharedProps)), mode === 'month' && /*#__PURE__*/React.createElement(MonthSelect, _extends({}, sharedProps))), /*#__PURE__*/React.createElement(ModeSwitch, _extends({}, sharedProps, {\n    onModeChange: onModeChange\n  })));\n}\nexport default CalendarHeader;"]},"metadata":{},"sourceType":"module"}